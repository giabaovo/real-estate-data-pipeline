version: '3.7'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow_password
      POSTGRES_DB: airflow_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - data_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
      timeout: 5s
      
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio_data:/data
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    networks:
      - data_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 5s

  airflow-cli:
    image: apache/airflow:2.7.3
    container_name: airflow-cli
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./real_estate_scrappers:/opt/airflow/real_estate_scrappers
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      AIRFLOW__CORE__EXECUTOR: 'LocalExecutor'
      AIRFLOW_UID: 50000
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow_password@postgres:5432/airflow_db
    networks:
      - data_network
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

  airflow:
    image: apache/airflow:2.7.3
    container_name: airflow
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./real_estate_scrappers:/opt/airflow/real_estate_scrappers
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      AIRFLOW_CFG_AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__EXECUTOR: 'LocalExecutor'
      AIRFLOW_UID: 50000 
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow_password@postgres:5432/airflow_db
    command: webserver
    networks:
      - data_network
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

  airflow-scheduler:
    image: apache/airflow:2.7.3
    container_name: airflow-scheduler
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./real_estate_scrappers:/opt/airflow/real_estate_scrappers
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      AIRFLOW__CORE__EXECUTOR: 'LocalExecutor'
      AIRFLOW_UID: 50000
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow_password@postgres:5432/airflow_db
    command: scheduler
    networks:
      - data_network
    depends_on:
      airflow:
        condition: service_healthy

  pyspark-processor:
    build:
      context: .
      dockerfile: data_processing/Dockerfile.pyspark
    image: pyspark-etl-processor:latest
    container_name: pyspark_etl_processor
    volumes:
      - ./minio_data:/minio_data
      - ./data_processing:/app
    environment:
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    networks:
      - data_network
    restart: "no"

networks:
  data_network:
    external: true

volumes:
  postgres_data: {}